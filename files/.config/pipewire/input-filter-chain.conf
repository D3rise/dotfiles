context.properties = {
    log.level        = 0
}

context.spa-libs = {
    audio.convert.* = audioconvert/libspa-audioconvert
    support.*       = support/libspa-support
}

context.modules = [
    {   name = libpipewire-module-rtkit
        args = {
            #nice.level   = -11
            #rt.prio      = 88
            #rt.time.soft = 200000
            #rt.time.hard = 200000
        }
        flags = [ ifexists nofail ]
    }
    {   name = libpipewire-module-protocol-native }
    {   name = libpipewire-module-client-node }
    {   name = libpipewire-module-adapter }

    {   name = libpipewire-module-filter-chain
        args = {
            node.name =  "rnnoise_source"
            node.description =  "Noise Canceling source"
            media.name =  "Noise Canceling source"
            filter.graph = {
                nodes = [
                    {
                        type = ladspa
                        name = rnnoise
                        plugin = /lib/ladspa/librnnoise_ladspa.so
                        label = noise_suppressor_mono
                        control = {
                            "VAD Threshold (%)" = 5.0
                        }
                    }
                    {
                        type = ladspa
                        name = comp
                        plugin = /lib/ladspa/dyson_compress_1403.so
                        label = dysonCompress
                        control = {
                            "Peak limit (dB)" = -4
                            "Release time (s)" = 1
                            "Fast compression ratio" = 0.5
                            "Compression ratio" = 1.00
                        }
                    }
                    {
                        type = ladspa
                        name = lim
                        plugin = /lib/ladspa/fast_lookahead_limiter_1913.so
                        label = fastLookaheadLimiter
                        control = {
                            "Input gain (dB)" = -4
                            "Limit (dB)" = -6
                            "Release time (s)" = 1
                        }
                    }
                ]
                links = [
                    { output = "rnnoise:Output" input = "comp:Input" }
                    { output = "comp:Output" input = "lim:Input 1" }
                ]
                inputs = [ "rnnoise:Input" ]
                outputs = [ "lim:Output 1" ]
            }
            capture.props = {
                node.passive = true
            }
            playback.props = {
                media.class = Audio/Source
            }
        }
    }
]
